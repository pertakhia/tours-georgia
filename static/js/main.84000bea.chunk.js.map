{"version":3,"sources":["loading.js","tour.js","tours.js","App.js","index.js"],"names":["Loading","className","Tour","id","image","info","price","name","removeTour","useState","readMore","setReadMore","src","alt","substring","onClick","Tours","tours","map","tour","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAWeA,EARC,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,+C,OCqBSC,EAzBF,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,GAAGC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,WAAgB,EACtBC,oBAAS,GADa,mBAC7CC,EAD6C,KACnCC,EADmC,KAEpD,OACI,0BAASV,UAAU,YAAnB,UACI,qBAAKW,IAAKR,EAAOS,IAAKN,IACtB,mCACI,sBAAKN,UAAU,OAAf,UACA,oBAAIA,UAAU,OAAd,SAAsBM,IACtB,qBAAIN,UAAU,QAAd,eAAyBK,QAEzB,oBAAGL,UAAU,WAAb,UACKS,EAAWL,EAAH,UAAaA,EAAKS,UAAU,EAAE,KAA9B,OACT,wBAAQb,UAAU,OAAOc,QAAS,kBAAMJ,GAAaD,IAArD,SACKA,EAAU,YAAc,iBAGjC,wBAAQT,UAAU,MAAMc,QAAS,kBAAMP,EAAWL,IAAlD,mC,OCSDa,EAvBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOT,EAAgB,EAAhBA,WACnB,OACI,oCACG,sBAAKP,UAAU,QAAf,UACA,4CAEA,cAAC,IAAD,CAAaA,UAAU,WAIvB,qBAAKA,UAAU,iBAEf,8BACKgB,EAAMC,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BX,WAAYA,IAA/BW,EAAKhB,aC6C3BiB,MA1Df,WAAgB,IAAD,EACcX,oBAAS,GADvB,mBACNY,EADM,KACEC,EADF,OAEWb,mBAAS,IAFpB,mBAENQ,EAFM,KAEAM,EAFA,KAWPC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,kBAGQI,MAhBjB,8CAaS,cAGTC,EAHS,gBAIKA,EAASC,OAJd,OAITX,EAJS,OAKfK,GAAW,GACXC,EAASN,GANM,kDAQfK,GAAW,GACXO,QAAQC,IAAR,MATe,0DAAH,qDAkBhB,OAJAC,qBAAU,WACPP,MACD,IAECH,EAEE,+BACE,cAAC,EAAD,MAKa,IAAjBJ,EAAMe,OAEF,uBAAM/B,UAAU,QAAhB,UACL,+CAGA,wBAAQA,UAAU,OAAOc,QAASS,EAAlC,wBAQE,+BACG,cAAC,EAAD,CAAQP,MAAOA,EAAOT,WAhDV,SAACL,GAElB,IAAM8B,EAAWhB,EAAMiB,QAAO,SAACf,GAAD,OAAUA,EAAKhB,KAAOA,KACpDoB,EAASU,SCPbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.84000bea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React, { useState } from 'react';\r\n\r\nconst Tour = ({id,image,info,price,name,removeTour}) => {\r\n    const [readMore, setReadMore]=useState(false);\r\n    return (\r\n        <article className=\"container\">\r\n            <img src={image} alt={name}/>\r\n            <footer >\r\n                <div className=\"info\">\r\n                <h4 className=\"name\">{name}</h4>\r\n                <h4 className=\"price\"> ${price}</h4>\r\n                </div>\r\n                <p className=\"paragrap\">\r\n                    {readMore ? info : `${info.substring(0,200)}...`}\r\n                    <button className='btn1' onClick={() => setReadMore(!readMore)}>\r\n                        {readMore? 'show less' : 'read more'}\r\n                    </button>\r\n                </p>\r\n                <button className=\"btn\" onClick={() => removeTour(id)}>\r\n                    not interested\r\n                </button>\r\n            </footer>\r\n        </article>\r\n    );\r\n    \r\n};\r\n\r\nexport default Tour;","import React from 'react';\r\nimport Tour from './tour';\r\nimport {FaAngellist} from \"react-icons/fa\";\r\n\r\nconst Tours = ({tours, removeTour}) => {\r\n    return (\r\n        <section>\r\n           <div className='title'> \r\n           <h2 >\r\n               Ours Tours\r\n           <FaAngellist className=\"col\" />\r\n        \r\n          \r\n           </h2>\r\n           <div className='underline'></div>\r\n           </div>\r\n           <div>\r\n               {tours.map((tour)=>{\r\n                   return <Tour key={tour.id} {...tour} removeTour={removeTour}></Tour>\r\n               })}\r\n           </div>\r\n\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Tours;","import React, { useEffect, useState } from 'react';\nimport Loading from './loading';\nimport Tours from './tours'; \nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  const [loading,setLoading]=useState(true);\n  const [tours,setTours]= useState([]);\n\n  const removeTour = (id) => \n  {\n    const newTours = tours.filter((tour) => tour.id !== id);\n    setTours(newTours);\n  }\n\n\n  const fetchTours = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const tours = await response.json();\n      setLoading(false);\n      setTours(tours);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n      \n    }\n  };\n\n  useEffect(()=> {\n     fetchTours();\n  },[]);\n  \n  if(loading) {\n    return (\n       <main>\n         <Loading/>\n       </main>\n    );\n  }\n\n  if(tours.length === 0)\n{\n  return <main className='title'>\n    <h1>\n      no tours left\n    </h1>\n    <button className=\"btn2\" onClick={fetchTours}>\n      refresh\n    </button>\n\n  </main>\n}\n\n  return (\n      <main>\n         <Tours  tours={tours} removeTour={removeTour} />\n\n      </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}